library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

entity REGISTER_TO_ALU is
port(regaa,regbb,regcc,regll :in std_logic_vector(15 downto 0);
ALU_SRC :in std_logic_vector(2 downto 0);
ain,bin :inout std_logic_vector(15 downto 0);
clk: in std_logic);
end REGISTER_TO_ALU;

architecture Behavioral of REGISTER_TO_ALU is
----------decoder----------
component decoder is
port(ALU_SRCd :in std_logic_vector(2 downto 0);
D1,D2,D3:out std_logic;
clk :in std_logic);
end component;
----------mux2_1-------------
component mux2_1 is
port(in1_1,in1_2 :in std_logic_vector(15 DOWNTO 0);
sl1:in std_logic;
out1:out std_logic_vector(15 DOWNTO 0));
end component;
---------ALL_SIGNALS-----------
signal s1,s2,s5 :std_logic;
signal s3,s4,s6 :std_logic_vector(15 downto 0);
--------------------------------
begin
G1:decoder port map(ALU_SRC,s1,s2,s5,clk);
G2:mux2_1 port map(regcc,regbb,s1,s3);
G3:mux2_1 port map(regaa,regll,s2,s4);
G4:mux2_1 port map(s3,s4,s5,s6);
G5:mux2_1 port map(s6,s4,ALU_SRC(2),ain);
G6:mux2_1 port map(ain,s3,ALU_SRC(2),bin);
end Behavioral;

---------------------------------------------------------------------
---Entity decoder----------

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
entity decoder is
port(ALU_SRCd :in std_logic_vector(2 downto 0);
D1,D2,D3 :out std_logic;
clk: in std_logic);
end decoder;
architecture archdecoder of decoder is
begin
process(clk,AlU_SRCd)
begin
if(rising_edge(clk))then
	if(ALU_SRCd ="000")then
	D1<='X';
	D2<='0';
	D3<='1';
	elsif(ALU_SRCd ="001")then
	D1<='1';
	D2<='X';
	D3<='0';
	elsif(ALU_SRCd ="010")then
	D1<='0';
	D2<='X';
	D3<='0';
	elsif(ALU_SRCd ="011")then
	D1<='X';
	D2<='1';
	D3<='1';
	elsif(ALU_SRCd ="100")then
	D1<='1';
	D2<='0';
	D3<='1';
	elsif(ALU_SRCd ="101")then
	D1<='0';
	D2<='0';
	D3<='1';
	elsif(ALU_SRCd ="110")then
	D1<='1';
	D2<='1';
	D3<='1';
	elsif(ALU_SRCd ="111")then
	D1<='0';
	D2<='1';
	D3<='1';
end if;
end if;
end process;
end archdecoder;

------------------Entity MUX2_1----------------------
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;
entity MUX2_1 is
port(in1_1,in1_2 :in std_logic_vector(15 DOWNTO 0);
sl1:in std_logic;
out1:out std_logic_vector(15 DOWNTO 0));
end MUX2_1;
architecture archMUX2_1 of MUX2_1 is
begin
process(in1_1,in1_2,sl1)
begin
if(sl1='0')then
out1<=in1_1;
elsif(sl1='1')then
out1<=in1_2;
end if;
end process;
end archMUX2_1;